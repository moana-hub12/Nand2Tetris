// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=nsel0);
    Not(in=sel[1], out=nsel1);
    Not(in=sel[2], out=nsel2);

    And(a=nsel2, b=nsel1, out=sela1);
    And(a=sela1, b=nsel0, out=sela);
    And(a=in, b=sela, out=a);
    
    And(a=nsel2, b=nsel1, out=selb1);
    And(a=selb1, b=sel[0], out=selb);
    And(a=in, b=selb, out=b);

    And(a=nsel2, b=sel[1], out=selc1);
    And(a=selc1, b=nsel0, out=selc);
    And(a=in, b=selc, out=c);
    
    And(a=nsel2, b=sel[1], out=seld1);
    And(a=seld1, b=sel[0], out=seld);
    And(a=in, b=seld, out=d);

    And(a=sel[2], b=nsel1, out=sele1);
    And(a=sele1, b=nsel0, out=sele);
    And(a=in, b=sele, out=e);

    And(a=sel[2], b=nsel1, out=self1);
    And(a=self1, b=sel[0], out=self);
    And(a=in, b=self, out=f);

    And(a=sel[2], b=sel[1], out=selg1);
    And(a=selg1, b=nsel0, out=selg);
    And(a=in, b=selg, out=g);

    And(a=sel[2], b=sel[1], out=selh1);
    And(a=selh1, b=sel[0], out=selh);
    And(a=in, b=selh, out=h);
}