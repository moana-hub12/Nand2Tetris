// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=nsel0);
    Not(in=sel[1], out=nsel1);
    Not(in=sel[2], out=nsel2);

    And(a=nsel2, b=nsel1, out=sela1);
    And(a=sela1, b=nsel0, out=sela);
    And(a=a[15], b=sela, out=oa);
    
    And(a=nsel2, b=nsel1, out=selb1);
    And(a=selb1, b=sel[0], out=selb);
    And(a=b[15], b=selb, out=ob);

    And(a=nsel2, b=sel[1], out=selc1);
    And(a=selc1, b=nsel0, out=selc);
    And(a=c[15], b=selc, out=oc);

    And(a=nsel2, b=sel[1], out=seld1);
    And(a=seld1, b=sel[0], out=seld);
    And(a=d[15], b=seld, out=od);
    
    And(a=sel[2], b=nsel1, out=sele1);
    And(a=sele1, b=nsel0, out=sele);
    And(a=e[15], b=sele, out=oe);

    And(a=sel[2], b=nsel1, out=self1);
    And(a=self1, b=sel[0], out=self);
    And(a=f[15], b=self, out=of);

    And(a=sel[2], b=sel[1], out=selg1);
    And(a=selg1, b=nsel0, out=selg);
    And(a=g[15], b=selg, out=og);

    And(a=sel[2], b=sel[1], out=selh1);
    And(a=selh1, b=sel[0], out=selh);
    And(a=h[15], b=selh, out=oh);

    Or(a=oa, b=ob , out=oab);
    Or(a=oab, b=oc , out=oabc);
    Or(a=oabc, b=od , out=oabcd);
    Or(a=oabcd, b=oe , out=oabcde);
    Or(a=oabcde, b=of , out=oabcdef);
    Or(a=oabcdef, b=og , out=oabcdefg);
    Or(a=oabcdefg, b=oh , out=out[15]);

}